'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import Link from 'next/link'
import ThemeProvider from '../components/ThemeProvider'
import ThemeSwitch from '../components/ThemeSwitch'

interface BlogPost {
  id: string
  title: string
  date: string
  excerpt: string
  content: string
  tags: string[]
}

// Sample blog posts data
const samplePosts: BlogPost[] = [
  {
    id: '1',
    title: 'My thoughts on modern web development',
    date: 'May 27, 2025',
    excerpt: 'Exploring the current landscape of web development tools and frameworks...',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',
    tags: ['Web Development', 'React', 'NextJS']
  },
  {
    id: '2',
    title: 'The importance of UI/UX in product design',
    date: 'May 20, 2025',
    excerpt: 'Why user experience should be at the forefront of any digital product...',
    content: 'Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',
    tags: ['UI/UX', 'Design', 'Product']
  },
  {
    id: '3',
    title: 'Personal reflections on learning new technologies',
    date: 'May 15, 2025',
    excerpt: 'My journey of continuous learning and adapting to new tech stacks...',
    content: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.',
    tags: ['Learning', 'Technology', 'Personal']
  }
]

export default function Blog() {
  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null)
  const [searchTerm, setSearchTerm] = useState('')
  const [activeTag, setActiveTag] = useState<string | null>(null)
  
  // Filter posts based on search term and active tag
  const filteredPosts = samplePosts.filter(post => {
    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) || 
                          post.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
                          post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))
    
    const matchesTag = activeTag ? post.tags.includes(activeTag) : true
    
    return matchesSearch && matchesTag
  })
  
  // Get all unique tags from posts
  const allTags = Array.from(new Set(samplePosts.flatMap(post => post.tags)))
  
  return (
    <>
      <ThemeProvider />
      <main className="min-h-screen bg-gradient-to-b from-[var(--bg-color)] to-[var(--bg-color)]/95 text-[var(--text-color)] relative">
        {/* Header with back button and theme switch */}
        <header className="sticky top-0 z-10 backdrop-blur-md bg-[var(--bg-color)]/80 border-b border-[var(--primary-color)]/10 px-6 py-4">
          <div className="max-w-6xl mx-auto flex justify-between items-center">
            <Link href="/" className="flex items-center gap-2 text-[var(--primary-color)] hover:text-[var(--primary-color)]/80 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-5 h-5">
                <path strokeLinecap="round" strokeLinejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
              </svg>
              <span>Back to Home</span>
            </Link>
            <h1 className="text-2xl font-[var(--font-playfair)] hidden sm:block">AnhND's Notes</h1>
            <ThemeSwitch />
          </div>
        </header>
        
        <div className="max-w-6xl mx-auto px-4 py-8">
          {selectedPost ? (
            <BlogPostDetail post={selectedPost} onBack={() => setSelectedPost(null)} />
          ) : (
            <div className="space-y-8">
              {/* Blog intro */}
              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5 }}
                className="text-center mb-12"
              >
                <h1 className="text-4xl md:text-5xl font-[var(--font-playfair)] mb-4">Personal Notes</h1>
                <p className="text-[var(--text-color)]/70 max-w-2xl mx-auto">
                  A collection of my thoughts, learnings, and reflections on technology, design, and life.
                </p>
              </motion.div>
              
              {/* Search and filter */}
              <div className="flex flex-col md:flex-row gap-4 items-center justify-between mb-8">
                <div className="relative w-full md:w-64">
                  <input
                    type="text"
                    placeholder="Search notes..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="w-full px-4 py-2 rounded-lg bg-[var(--bg-color)]/50 border border-[var(--primary-color)]/20 focus:border-[var(--primary-color)]/40 focus:outline-none focus:ring-1 focus:ring-[var(--primary-color)]/30 placeholder-[var(--text-color)]/40"
                  />
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-5 h-5 absolute right-3 top-2.5 text-[var(--text-color)]/50">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
                  </svg>
                </div>
                
                <div className="flex flex-wrap gap-2 justify-center md:justify-end">
                  <button
                    onClick={() => setActiveTag(null)}
                    className={`px-3 py-1 text-sm rounded-full transition-colors ${!activeTag ? 'bg-[var(--primary-color)]/20 text-[var(--primary-color)]' : 'bg-[var(--bg-color)]/50 text-[var(--text-color)]/70 hover:bg-[var(--primary-color)]/10'}`}
                  >
                    All
                  </button>
                  {allTags.map(tag => (
                    <button
                      key={tag}
                      onClick={() => setActiveTag(tag === activeTag ? null : tag)}
                      className={`px-3 py-1 text-sm rounded-full transition-colors ${activeTag === tag ? 'bg-[var(--primary-color)]/20 text-[var(--primary-color)]' : 'bg-[var(--bg-color)]/50 text-[var(--text-color)]/70 hover:bg-[var(--primary-color)]/10'}`}
                    >
                      {tag}
                    </button>
                  ))}
                </div>
              </div>
              
              {/* Blog posts list */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredPosts.length > 0 ? (
                  filteredPosts.map((post, index) => (
                    <motion.div
                      key={post.id}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.5, delay: index * 0.1 }}
                      onClick={() => setSelectedPost(post)}
                      className="group cursor-pointer bg-[var(--bg-color)]/30 backdrop-blur-sm border border-[var(--primary-color)]/10 hover:border-[var(--primary-color)]/30 rounded-xl overflow-hidden transition-all duration-300 hover:shadow-lg hover:shadow-[var(--primary-color)]/5 hover:-translate-y-1"
                    >
                      <div className="p-6">
                        <div className="flex justify-between items-start mb-3">
                          <span className="text-sm text-[var(--text-color)]/60">{post.date}</span>
                          <div className="h-8 w-8 rounded-full bg-[var(--primary-color)]/10 flex items-center justify-center text-[var(--primary-color)] opacity-0 group-hover:opacity-100 transition-opacity">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-4 h-4">
                              <path strokeLinecap="round" strokeLinejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                            </svg>
                          </div>
                        </div>
                        <h2 className="text-xl font-[var(--font-playfair)] mb-2 group-hover:text-[var(--primary-color)] transition-colors">{post.title}</h2>
                        <p className="text-[var(--text-color)]/70 text-sm mb-4 line-clamp-3">{post.excerpt}</p>
                        <div className="flex flex-wrap gap-2">
                          {post.tags.map(tag => (
                            <span 
                              key={tag} 
                              className="text-xs px-2 py-1 rounded-full bg-[var(--primary-color)]/10 text-[var(--primary-color)]"
                              onClick={(e) => {
                                e.stopPropagation();
                                setActiveTag(tag === activeTag ? null : tag);
                              }}
                            >
                              {tag}
                            </span>
                          ))}
                        </div>
                      </div>
                    </motion.div>
                  ))
                ) : (
                  <div className="col-span-full text-center py-12">
                    <p className="text-[var(--text-color)]/60">No notes found matching your search criteria.</p>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
        
        {/* Background Elements */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-[-10%] right-[-10%] w-[40%] h-[40%] rounded-full bg-gradient-to-br from-[var(--primary-color)]/5 to-[var(--secondary-color)]/5 blur-3xl"></div>
          <div className="absolute bottom-[-10%] left-[-10%] w-[40%] h-[40%] rounded-full bg-gradient-to-tr from-[var(--primary-color)]/5 to-[var(--secondary-color)]/5 blur-3xl"></div>
        </div>
      </main>
    </>
  )
}

// Blog post detail component
function BlogPostDetail({ post, onBack }: { post: BlogPost, onBack: () => void }) {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="max-w-3xl mx-auto"
    >
      <button 
        onClick={onBack}
        className="mb-6 flex items-center gap-2 text-[var(--primary-color)] hover:text-[var(--primary-color)]/80 transition-colors"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-5 h-5">
          <path strokeLinecap="round" strokeLinejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
        </svg>
        <span>Back to all notes</span>
      </button>
      
      <article className="bg-[var(--bg-color)]/30 backdrop-blur-sm border border-[var(--primary-color)]/10 rounded-xl p-8">
        <div className="mb-6">
          <span className="text-sm text-[var(--text-color)]/60 block mb-2">{post.date}</span>
          <h1 className="text-3xl md:text-4xl font-[var(--font-playfair)] mb-4">{post.title}</h1>
          <div className="flex flex-wrap gap-2 mb-6">
            {post.tags.map(tag => (
              <span key={tag} className="text-xs px-2 py-1 rounded-full bg-[var(--primary-color)]/10 text-[var(--primary-color)]">
                {tag}
              </span>
            ))}
          </div>
        </div>
        
        <div className="prose prose-lg prose-invert max-w-none">
          <p className="text-[var(--text-color)]/90 leading-relaxed mb-4">{post.content}</p>
          
          {/* Example of formatted content - in a real implementation, you'd parse markdown or HTML */}
          <p className="text-[var(--text-color)]/90 leading-relaxed mb-4">
            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.
          </p>
          
          <h2 className="text-2xl font-[var(--font-playfair)] mt-8 mb-4">Key Insights</h2>
          
          <ul className="list-disc pl-5 space-y-2 text-[var(--text-color)]/90">
            <li>Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet</li>
            <li>Consectetur, adipisci velit, sed quia non numquam eius modi tempora</li>
            <li>Incidunt ut labore et dolore magnam aliquam quaerat voluptatem</li>
          </ul>
          
          <blockquote className="border-l-4 border-[var(--primary-color)]/30 pl-4 italic my-6 text-[var(--text-color)]/80">
            "The best way to predict the future is to invent it." - Alan Kay
          </blockquote>
          
          <p className="text-[var(--text-color)]/90 leading-relaxed">
            At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident.
          </p>
        </div>
      </article>
    </motion.div>
  )
}
